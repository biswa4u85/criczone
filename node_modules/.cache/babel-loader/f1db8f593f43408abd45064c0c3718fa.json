{"ast":null,"code":"var _jsxFileName = \"/Users/avijit/Sites/frappe-news/src/ThemeProvider.js\",\n    _s = $RefreshSig$();\n\nimport { lazy, Suspense } from \"react\";\nimport { useTheme } from \"./theme/use-theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DarkTheme = /*#__PURE__*/lazy(_c = () => import(\"./theme/dark-theme\"));\n_c2 = DarkTheme;\nconst LightTheme = /*#__PURE__*/lazy(_c3 = () => import(\"./theme/light-theme\"));\n_c4 = LightTheme;\n\nconst ThemeProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [darkMode] = useTheme();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Suspense, {\n      fallback: /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 27\n      }, this),\n      children: darkMode ? /*#__PURE__*/_jsxDEV(DarkTheme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(LightTheme, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n};\n\n_s(ThemeProvider, \"wCI3QkQytrABpEBy0gSuXP24xZ4=\", false, function () {\n  return [useTheme];\n});\n\n_c5 = ThemeProvider;\nexport default ThemeProvider;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"DarkTheme$lazy\");\n$RefreshReg$(_c2, \"DarkTheme\");\n$RefreshReg$(_c3, \"LightTheme$lazy\");\n$RefreshReg$(_c4, \"LightTheme\");\n$RefreshReg$(_c5, \"ThemeProvider\");","map":{"version":3,"names":["lazy","Suspense","useTheme","DarkTheme","LightTheme","ThemeProvider","children","darkMode"],"sources":["/Users/avijit/Sites/frappe-news/src/ThemeProvider.js"],"sourcesContent":["import { lazy, Suspense } from \"react\";\nimport { useTheme } from \"./theme/use-theme\";\n\nconst DarkTheme = lazy(() => import(\"./theme/dark-theme\"));\nconst LightTheme = lazy(() => import(\"./theme/light-theme\"));\n\nconst ThemeProvider = ({ children }) => {\n  const [darkMode] = useTheme();\n  return (\n    <>\n      <Suspense fallback={<span />}>\n        {darkMode ? <DarkTheme /> : <LightTheme />}\n      </Suspense>\n      {children}\n    </>\n  );\n};\nexport default ThemeProvider"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,QAAf,QAA+B,OAA/B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;;AAEA,MAAMC,SAAS,gBAAGH,IAAI,MAAC,MAAM,OAAO,oBAAP,CAAP,CAAtB;MAAMG,S;AACN,MAAMC,UAAU,gBAAGJ,IAAI,OAAC,MAAM,OAAO,qBAAP,CAAP,CAAvB;MAAMI,U;;AAEN,MAAMC,aAAa,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACtC,MAAM,CAACC,QAAD,IAAaL,QAAQ,EAA3B;EACA,oBACE;IAAA,wBACE,QAAC,QAAD;MAAU,QAAQ,eAAE;QAAA;QAAA;QAAA;MAAA,QAApB;MAAA,UACGK,QAAQ,gBAAG,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAAH,gBAAmB,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA;IAD9B;MAAA;MAAA;MAAA;IAAA,QADF,EAIGD,QAJH;EAAA,gBADF;AAQD,CAVD;;GAAMD,a;UACeH,Q;;;MADfG,a;AAWN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}